<?xml version="1.0" encoding="ISO-8859-15" standalone="no"?><uc-export clientvers="11.0.0">
<JOBS_UNIX AttrType="UNIX" name="PCK.AUTOMIC_DEB.PRV.JOB.INSTALL@UNIX">
<XHEADER state="1">
<Title/>
<ArchiveKey1/>
<ArchiveKey2/>
<Active>1</Active>
<OH_SubType/>
<CustomAttributes KeyListID="0" dataRequestID="0"/>
</XHEADER>
<OUTPUTREG state="1">
<FileReg/>
</OUTPUTREG>
<SYNCREF state="1">
<Syncs/>
</SYNCREF>
<ATTR_JOBS state="1">
<Queue>CLIENT_QUEUE</Queue>
<StartType/>
<HostDst>|&lt;UNIX&gt;|HOST</HostDst>
<HostATTR_Type>UNIX</HostATTR_Type>
<CodeName/>
<Login/>
<IntAccount/>
<ExtRepDef>1</ExtRepDef>
<ExtRepAll>0</ExtRepAll>
<ExtRepNone>0</ExtRepNone>
<AutoDeactNo>0</AutoDeactNo>
<AutoDeact1ErrorFree>0</AutoDeact1ErrorFree>
<AutoDeactErrorFree>1</AutoDeactErrorFree>
<DeactWhen>ANY_OK</DeactWhen>
<DeactDelay>0</DeactDelay>
<AutoDeactAlways>0</AutoDeactAlways>
<AttDialog>0</AttDialog>
<ActAtRun>1</ActAtRun>
<Consumption>0</Consumption>
<UC4Priority>0</UC4Priority>
<MaxParallel2>0</MaxParallel2>
<MpElse1>1</MpElse1>
<MpElse2>0</MpElse2>
<TZ/>
</ATTR_JOBS>
<ATTR_UNIX state="1">
<OutputDb>1</OutputDb>
<OutputDbErr>0</OutputDbErr>
<OutputFile>0</OutputFile>
<ShellScript>1</ShellScript>
<Command>0</Command>
<Priority>0</Priority>
<Shell>sh</Shell>
<ShellOptions/>
<Com/>
</ATTR_UNIX>
<RUNTIME state="1">
<MaxRetCode>0</MaxRetCode>
<MrcExecute/>
<MrcElseE>0</MrcElseE>
<FcstStatus>0|U00000000 ??? ""</FcstStatus>

<ErtMethodDef>1</ErtMethodDef>
<ErtMethodFix>0</ErtMethodFix>
<ErtFix>0</ErtFix>
<ErtDynMethod>2|Average</ErtDynMethod>
<ErtMethodDyn>0</ErtMethodDyn>
<ErtCnt>0</ErtCnt>
<ErtCorr>0</ErtCorr>
<ErtIgn>0</ErtIgn>
<ErtIgnFlg>0</ErtIgnFlg>
<ErtMinCnt>0</ErtMinCnt>
<MrtMethodNone>1</MrtMethodNone>
<MrtMethodFix>0</MrtMethodFix>
<MrtFix>0</MrtFix>
<MrtMethodErt>0</MrtMethodErt>
<MrtErt>0</MrtErt>
<MrtMethodDate>0</MrtMethodDate>
<MrtDays>0</MrtDays>
<MrtTime>00:00</MrtTime>
<MrtTZ/>
<SrtMethodNone>1</SrtMethodNone>
<SrtMethodFix>0</SrtMethodFix>
<SrtFix>0</SrtFix>
<SrtMethodErt>0</SrtMethodErt>
<SrtErt>0</SrtErt>
<MrtCancel>0</MrtCancel>
<MrtExecute>0</MrtExecute>
<MrtExecuteObj/>
</RUNTIME>
<DYNVALUES state="1">
<dyntree>
<node content="1" id="VALUE" name="Variables" parent="" type="VALUE">
<VALUE state="1">
<Values/>
<Mode>0</Mode>
</VALUE>
</node>
</dyntree>
</DYNVALUES>
<ROLLBACK state="1">
<RollbackFlag>0</RollbackFlag>
<CBackupObj/>
<CRollbackObj/>
<FBackupPath/>
<FDeleteBefore>0</FDeleteBefore>
<FInclSubDirs>0</FInclSubDirs>
</ROLLBACK>
<PRE_SCRIPT mode="1" replacementmode="1" state="1">
<PSCRI><![CDATA[:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.PREPARE_JOB]]></PSCRI>
</PRE_SCRIPT>
<SCRIPT mode="1" state="1">
<MSCRI><![CDATA[:INCLUDE PCK.ITPA_SHARED.PUB.INCLUDE.ATTACH
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.SUDO_EXECUTION

:set &R# = ""
:if &UC4RB_DEB_RECURSIVE# = "YES"
:  set &R# = "-R"
:endif

:set &instdir# = ""
:if &UC4RB_DEB_INSTALL_DIR# <> ""
:  set &instdir# = str_cat("--instdir=", &UC4RB_DEB_INSTALL_DIR#)
:endif

:set &admindir# = ""
:if &UC4RB_DEB_ADMIN_DIR# <> ""
:  set &admindir# = str_cat("--admindir=", &UC4RB_DEB_ADMIN_DIR#)
:endif

:set &nosig# = ""
:if &UC4RB_DEB_IGNORE_SIGN_CHECK# = "YES"
:  set &nosig# = "--no-debsig"
:endif

:set &nodeps# = ""
:if &UC4RB_DEB_IGNORE_PKG_DEPS# <> ""
:  set &nodeps# = str_cat("--ignore-depends=", &UC4RB_DEB_IGNORE_PKG_DEPS#)
:endif

:set &E# = ""
:IF &UC4RB_DEB_SKIP_SAME_VERSION# = "YES"
:  set &E# = "-E"
:ENDIF

export LC_ALL=C

count=0
installed=1
:SET &UC4RB_DEB_PACKAGE# = STR_TRIM("&UC4RB_DEB_PACKAGE#")
installPackages="&UC4RB_DEB_PACKAGE#"
!Check if install multiple package (split by space)
case "$installPackages" in
*" "*)
!Install multiple, not do anything
;;
*)
!Check is directory
if [ -d $installPackages ];
then
  echo "$installPackages is directory, install recursive!"
  installPackages=$installPackages"/*.deb"
fi
;;
esac
for i in $installPackages;do
  count=`expr $count + 1`
: if &UC4RB_DEB_FAIL_IF_INSTALLED# = "YES"
      name=`dpkg-deb -f "$i" Package`
      version=`dpkg-deb -f $i Version`
      if dpkg -s $name | awk "/Version: $version/"'{v=1} /Status:.* installed.*/ {s=1} END {exit (v &&&& s)}';then
        installed=0
      fi
: endif
done

:if &UC4RB_DEB_FAIL_IF_INSTALLED# = "YES"
  if [ $installed -eq 1 ]; then
    echo "All packages already installed."
    exit 1
  fi
:endif

pipe=/tmp/debinst.$$.&$ACTIVATOR_RUNID#
mkfifo $pipe
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_SHELL_CMD@UNIX

dpkg 9>$pipe --status-fd 9 &R# &E# &instdir# &admindir# &nosig# &nodeps# -i &UC4RB_DEB_PACKAGE# & awk <$pipe "
  BEGIN {
    installed = 0
  }
  /status: .*: installed/ {installed++}
  /status: .* : error : dependency/ {exit 2}
  END {
!Fix lacking count 'status: man-db: installed' line <---start
    if (installed == ($count + 1)) exit 0; exit 3
  }"
!Fix lacking count 'status: man-db: installed' line --->end
rc=$?
rm $pipe
exit $rc]]></MSCRI>
</SCRIPT>
<OUTPUTSCAN state="1">
<Inherit>N</Inherit>
<filterobjects/>
<HostFsc/>
<LoginFsc/>
</OUTPUTSCAN>
<POST_SCRIPT mode="1" replacementmode="1" state="1">
<OSCRI/>
</POST_SCRIPT>
<DOCU_Docu state="1" type="text">
<DOC/>
</DOCU_Docu>
</JOBS_UNIX>
</uc-export>